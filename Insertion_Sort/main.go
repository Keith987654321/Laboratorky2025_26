package main

/*
	Сортировка вставками последовательно берёт 1 эл-т массива (начиная со второго и заканчивая последним)
	и сравнивает его с эл-тами массива слева от него, пока эти элементы больше изначального
	она двигается влево, когда либо достигнуто начало массива или нашелся эл-т X меньше или
	равный, то она сдвигает все эл-ты на 1 вправо от эл-та X и вставляет изначальный эл-т
	между X и сдвинутыми эл-тами. И так пока цикл не пройдется по всем эл-там массива.
	Сложность в лучшем случае - n (если все эл-ты уже отсортированы)
	В худшем - n^2
*/

import "fmt"

func InsertionSort(arr []int) []int {
	for i := 1; i < len(arr); i++ {
		number := arr[i] // Запоминаем число

		j := i - 1
		for j >= 0 && arr[j] > number { // Пока числа слева больше number или не начало массива
			arr[j+1] = arr[j] // Сдвигаем эл-ты на 1 вправо
			j--
		}
		arr[j+1] = number // Вставляем number между X и сдвинутыми эл-тами
	}
	return arr
}

func main() {
	arr := []int{5, 3, 4, 1, 2}
	fmt.Print(InsertionSort(arr))
}
