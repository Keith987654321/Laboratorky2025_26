'''
    Работает аналогично сортировке вставками, но сравниваются
	эл-ты не последовательно, а на промежутке (gap),
	блягодаря чему большие эл-ты массива быстрее
	встают на свои места.
	* Сложность в худшем случае O(n^2)
	* Сложность по памяти O(1)
'''

def shell_sort(arr):
    n = len(arr)
    gap = n // 2  # начальный шаг

    while gap > 0:
        # проходим по массиву начиная с gap
        for i in range(gap, n):
            temp = arr[i]
            j = i

            # сдвигаем элементы, которые больше temp, на gap позиций вперёд
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap

            arr[j] = temp
        gap //= 2  # уменьшаем шаг в 2 раза

    return arr


arr = [8, 4, 1, 56, 3, -44, 23, -6, 28, 0]
print(shell_sort(arr))
