"""
Сортировка методом прочёсывания (Comb Sort) — это улучшенная сортировка пузырьком.
Пузырьковая сортировка сравнивает только соседние элементы массива, а эта —
элементы на определённом промежутке (gap). Благодаря этому наименьшие элементы
быстрее "всплывают" в начало массива.

Сортировка завершается, когда за весь очередной проход по массиву не было
ни одной перестановки элементов и когда промежуток равен 1.

Сложность:
  - В лучшем случае: O(n * log(n))
  - В худшем случае: O(n^2)
  - Память: O(1)
"""

def comb_sort(arr):
    is_sorted = False
    shrink_factor = 1.3  # Коэффициент сжатия промежутка
    gap = len(arr)       # Промежуток между сравниваемыми элементами

    while not is_sorted:
        gap = int(gap / shrink_factor) # Сжимаем промежуток
        if gap <= 1:
            gap = 1
            is_sorted = True

        i = 0
        while i + gap < len(arr):
            if arr[i] > arr[i + gap]: # Если элемент в начале массива больше элемента через промежуток, то меняем их местами
                arr[i], arr[i + gap] = arr[i + gap], arr[i]
                is_sorted = False
            i += 1

    return arr



arr = [8, 4, 1, 56, 3, -44, 23, -6, 28, 0]
print(comb_sort(arr))
